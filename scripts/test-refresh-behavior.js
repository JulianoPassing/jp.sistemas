/**
 * Script para testar comportamento de refresh e guia an√¥nima
 */

const fetch = require('node-fetch');

async function testRefreshBehavior() {
  const baseURL = 'http://localhost:3000/api/cobrancas';
  
  console.log('üß™ Testando Comportamento de Refresh e Guia An√¥nima...\n');
  
  try {
    // Teste 1: Login normal
    console.log('1. Fazendo login normal...');
    const loginData = {
      username: 'cobranca',
      password: 'cobranca123'
    };
    
    const loginResponse = await fetch(`${baseURL}/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      credentials: 'include',
      body: JSON.stringify(loginData)
    });
    
    console.log('Status do login:', loginResponse.status);
    const loginResult = await loginResponse.json();
    console.log('Resultado do login:', loginResult);
    console.log('');
    
    if (!loginResult.success) {
      console.log('‚ùå Login falhou, n√£o foi poss√≠vel continuar os testes');
      return;
    }
    
    // Teste 2: Verificar autentica√ß√£o ap√≥s login
    console.log('2. Verificando autentica√ß√£o ap√≥s login...');
    const checkAuthResponse1 = await fetch(`${baseURL}/check-auth`, {
      credentials: 'include'
    });
    console.log('Status:', checkAuthResponse1.status);
    const checkAuthData1 = await checkAuthResponse1.json();
    console.log('Resposta:', checkAuthData1);
    console.log('');
    
    // Teste 3: Simular "refresh" (nova requisi√ß√£o com mesmos cookies)
    console.log('3. Simulando refresh (nova requisi√ß√£o)...');
    const checkAuthResponse2 = await fetch(`${baseURL}/check-auth`, {
      credentials: 'include'
    });
    console.log('Status ap√≥s "refresh":', checkAuthResponse2.status);
    const checkAuthData2 = await checkAuthResponse2.json();
    console.log('Resposta ap√≥s "refresh":', checkAuthData2);
    console.log('');
    
    // Teste 4: Simular "guia an√¥nima" (sem cookies)
    console.log('4. Simulando guia an√¥nima (sem cookies)...');
    const checkAuthResponse3 = await fetch(`${baseURL}/check-auth`, {
      credentials: 'omit' // Sem cookies
    });
    console.log('Status sem cookies:', checkAuthResponse3.status);
    const checkAuthData3 = await checkAuthResponse3.json();
    console.log('Resposta sem cookies:', checkAuthData3);
    console.log('');
    
    // Teste 5: Verificar sess√£o
    console.log('5. Verificando sess√£o...');
    const sessionResponse = await fetch(`${baseURL}/session`, {
      credentials: 'include'
    });
    console.log('Status da sess√£o:', sessionResponse.status);
    const sessionData = await sessionResponse.json();
    console.log('Dados da sess√£o:', sessionData);
    console.log('');
    
    // Teste 6: Simular logout e verificar
    console.log('6. Fazendo logout...');
    const logoutResponse = await fetch(`${baseURL}/logout`, {
      method: 'POST',
      credentials: 'include'
    });
    console.log('Status do logout:', logoutResponse.status);
    const logoutResult = await logoutResponse.json();
    console.log('Resultado do logout:', logoutResult);
    console.log('');
    
    // Teste 7: Verificar ap√≥s logout
    console.log('7. Verificando ap√≥s logout...');
    const checkAuthResponse4 = await fetch(`${baseURL}/check-auth`, {
      credentials: 'include'
    });
    console.log('Status ap√≥s logout:', checkAuthResponse4.status);
    const checkAuthData4 = await checkAuthResponse4.json();
    console.log('Resposta ap√≥s logout:', checkAuthData4);
    console.log('');
    
    // An√°lise dos resultados
    console.log('üìä AN√ÅLISE DOS RESULTADOS:');
    console.log('');
    
    if (checkAuthData1.authenticated && checkAuthData2.authenticated) {
      console.log('‚úÖ Comportamento NORMAL: Login mantido ap√≥s "refresh"');
    } else {
      console.log('‚ùå Problema: Login perdido ap√≥s "refresh"');
    }
    
    if (!checkAuthData3.authenticated) {
      console.log('‚úÖ Comportamento CORRETO: Sem autentica√ß√£o em "guia an√¥nima"');
    } else {
      console.log('‚ùå Problema: Autentica√ß√£o mantida sem cookies');
    }
    
    if (!checkAuthData4.authenticated) {
      console.log('‚úÖ Comportamento CORRETO: Logout funcionando');
    } else {
      console.log('‚ùå Problema: Logout n√£o funcionou');
    }
    
    console.log('');
    console.log('üí° EXPLICA√á√ÉO:');
    console.log('- F5 em guia an√¥nima SEMPRE pede login (comportamento esperado)');
    console.log('- Guia an√¥nima n√£o salva cookies/sess√µes entre refresh');
    console.log('- Sess√£o √© perdida em modo an√¥nimo');
    console.log('- Isso √© uma medida de seguran√ßa do navegador');
    
  } catch (error) {
    console.error('‚ùå Erro nos testes:', error.message);
  }
}

// Executar testes
testRefreshBehavior(); 